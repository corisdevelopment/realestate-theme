---
import '@fontsource/cormorant-garamond/300.css';
import '@fontsource/cormorant-garamond/400.css';
// import '@fontsource/cormorant-garamond/500.css';
import '@fontsource/cormorant-garamond/600.css';
// import '@fontsource/cormorant-garamond/700.css';
import '@fontsource/poppins/200.css';
import '@fontsource/poppins/300.css';
import '@fontsource/poppins/400.css';
import '@fontsource/poppins/500.css';
import '@fontsource/poppins/600.css';
import '@fontsource/poppins/700.css';
import Screensize from '../components/Screensize.astro'
import VerticalBigNav from '../components/navs/VerticalBigNav.astro'
import Footer from '../components/Footer.astro';
interface Props {
	metaTags?: {
		title?: string,
		description?: string
	} | any,
}

const { metaTags } = Astro.props;

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1">
		<title>{metaTags?.title}</title>
		<meta name="description" content={metaTags?.description}>
		<meta name="robots" content="index, follow">
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
		<script is:inline src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/ScrollTrigger.min.js"></script>
		<script is:inline src="https://cdn.jsdelivr.net/gh/studio-freight/lenis@1.0.19/bundled/lenis.min.js"></script>
	</head>
	<body>		
		<VerticalBigNav />
		<div class="content_offset">
			<Screensize />
			<slot />
		</div>
		<!-- Footer -->
		<Footer />
		<script is:inline>
			// @ts-nocheck 
			gsap.registerPlugin(ScrollTrigger);
			// ScrollTrigger.normalizeScroll(true);
			const lenis = new Lenis();
			
			lenis.on('scroll', ScrollTrigger.update);
			gsap.ticker.add((time)=>{
				lenis.raf(time * 1000)
			});
			gsap.ticker.lagSmoothing(0);

			// Check if animated element exists
			const aboutCTA = document.getElementsByClassName('about-cta')
			const servicesCTA = document.getElementById('servicesCTA')
			const splitText = document.getElementsByClassName('split-text')

			if (aboutCTA.length > 0) {
				//About Scroll
				let tl = gsap.timeline({
					scrollTrigger: {
						trigger: '.about-cta',
						start: 'top center+=200',
						end: 'bottom center+=200',
						scrub: 1,
						// markers: true
					}
				});
				gsap.set('#line2', {xPercent: -30});
				let tween = gsap.to('.word', {duration: 1, opacity: 1, stagger: 1});
				let scrollLeft = gsap.to('#line1', {xPercent: -30, duration: 10});
				let scrollRight = gsap.to('#line2', {xPercent: 0, duration: 10});
				tl.add(tween).add(scrollLeft, "<2").add(scrollRight, "<");
			}

			if (splitText.length > 0) {
				//About Scroll
				let tl = gsap.timeline({
					scrollTrigger: {
						trigger: '.split-text',
						start: 'top top+=20%',
						end: 'bottom top',
						scrub: 1,
						// markers: true
					}
				});
				gsap.set('#line2', {xPercent: -30});
				let tween = gsap.to('.word', {duration: 1, opacity: 1, stagger: 1});
				let scrollLeft = gsap.to('#line1', {xPercent: -30, duration: 10});
				let scrollRight = gsap.to('#line2', {xPercent: 0, duration: 10});
				tl.add(tween).add(scrollLeft, "<2").add(scrollRight, "<");
			}

			if (servicesCTA) {
				// Services Scroll
				let ss = gsap.timeline({
					scrollTrigger: {
						trigger: '#servicesCTA',
						start: 'top bottom-=20%',
						end: 'bottom bottom+=20%',
						scrub: 1,
						// pin: true,
						// pinSpacing: false,
						// markers: true,
					}
				});
				let textIn = gsap.to('#serviceHeadline', {
					duration: 2,
					opacity: 1,
				});
				let overlayClip = gsap.to('.overlay', {
					duration: 2,
					clipPath: 'circle(110%)',
				});
				ss.add(textIn).add(overlayClip)
			}
		</script>
	</body>
</html>
<style is:global>
	:root {
		--accent: 255, 209, 101;
		--accent-light: 201, 177, 123;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
		--max-content: 1280px !important;
		--header-height: 78px;
	}
	.font-cg {
		font-family: 'Cormorant Garamond', serif;
	}
	.font-poppins {
		font-family: 'Poppins', sans-serif;
	}
	.max-content {
		max-width: var(--max-content);
	}
	.prose {
		max-width: 85ch !important;
	}
	.content_offset {
		padding-top: var(--header-height);
	}
	@media screen and (max-width: 768px) {
		.max-content-mobile {
			max-width: 82vw;
		}
	}
	@media screen and (max-width: 1024px) {
		.max-content-mobile {
			max-width: 88vw;
		}
	}
	
	html {
		font-family: system-ui, sans-serif;
		background: #111111;
		background-size: 224px;
	}
	body {
		font-family: 'Poppins', sans-serif;
	}
	.nav-open {
		overflow: hidden;
	}
	html.lenis, html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-scrolling iframe {
  pointer-events: none;
}
</style>
