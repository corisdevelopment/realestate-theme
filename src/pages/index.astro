---
import { useStoryblokApi, renderRichText } from '@storyblok/astro'
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro"
import Layout from '../layouts/Layout.astro';

// Components
import HeroLG from '../components/HeroLG.astro';
import HighlightWithGallery from '../components/sections/HighlightWithGallery.astro';
import TwoColumnScroll from '../components/sections/TwoColumnScroll.astro';

import ImgImport from '../../public/unsplash_f9qZuKoZYoY.png';

import { testLog } from '../lib/Test';


// const siteMode = import.meta.env.MODE;
// const isSSR = import.meta.env.SSR;
// const testEnv = import.meta.env.CMS_REPO_NAME;
// let tLog = testLog();
// console.log(isSSR);

/////////////////////////////////
// Content
// Testing image
const testImg = '/unsplash_f9qZuKoZYoY.png';

const testImg2 = {
	src: testImg,
	alt: "Alt text"
}

//////////////////
// Storyblok Content
const storyblokApi = useStoryblokApi()
const { data } = await storyblokApi.get('cdn/stories/home', {
	version: import.meta.env.DEV ? "draft" : "published",
	resolve_links: 'url'
})
const content = data.story.content;
// Hero Section
const hero = {
	image: {
		src: content.hero_image.filename,
		alt: content.hero_image.alt,
	},
	content: {
		headline: content.hero_title,
		content: content.hero_description,
		linkText: content.hero_buttonText,
		linkURL: content.hero_buttonLink.url
	}
}
// About Us Section

// Change to Services Section
const section2col = {
	title: content.about_title,
	content: renderRichText(content.about_description),
	image: content.about_image,
}
const services = [
	{
		content: renderRichText(content.service_1),
		link: {
			name: content.service_1_link.story.name,
			url: content.service_1_link.story.url
		},
	}
]
// console.log(data)
---

<Layout metaTags={content.metatags}>
	<main>
		<HeroLG image={hero.image} content={hero.content} />
		<!-- <TwoColumnScroll title={section2col.title} content={section2col.content} image={section2col.image} /> -->
		{
			content.services?.map((blok: any) => {
				return <StoryblokComponent blok={blok} />
			})
		}
		<HighlightWithGallery />
	</main>
</Layout>

<style>
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
